<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>PDF Upload</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp"
      crossorigin="anonymous"
    />
    <style>
      #table-container {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
        /* Add other styling properties as needed */
      }

      #table-container.show {
        opacity: 1;
      }
    </style>
  </head>
  <body>
    <div class="container my-5">
      <div
        class="position-relative p-5 text-center text-muted bg-body border border-dashed rounded-5"
      >
        <h1 class="text-body-emphasis">上传文档</h1>
        <p class="col-lg-6 mx-auto mb-4">上传PDF文件并点击上传按钮。</p>
        <form
          id="upload-form"
          class="input-group mb-3"
          enctype="multipart/form-data"
        >
          <input
            type="file"
            class="form-control"
            id="inputGroupFile02"
            name="pdf"
            accept=".pdf"
            multiple
            required
          />
          <button class="input-group-text" for="inputGroupFile02" type="submit">
            Upload PDF
          </button>
        </form>
        <div id="table-container"></div>
        <div class="d-flex gap-2 justify-content-center py-5">
          <button
            id="upload-to-db"
            class="btn btn-primary px-5 mb-5 d-none"
            type="button"
            disabled
          >
            <span
              class="spinner-border spinner-border-sm d-none"
              role="status"
              aria-hidden="true"
            ></span>
            <span id="upload-text">上传数据库</span>
          </button>
        </div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N"
      crossorigin="anonymous"
    ></script>
    <script>
      document
        .getElementById("upload-form")
        .addEventListener("submit", async (event) => {
          event.preventDefault();
          const formData = new FormData();
          console.log(`formData:${formData}`);
          const fileInput = document.getElementById("inputGroupFile02");
          for (const file of fileInput.files) {
            formData.append("pdf", file);
          }
          const response = await fetch("/upload", {
            method: "POST",
            body: formData,
          });
          // Check if the response was successful
          if (response.ok) {
            // Remove the "d-none" class from the "upload-to-db" button to show it
            document.getElementById("upload-to-db").classList.remove("d-none");
          }
          const tableHTML = await response.text();
          console.log("Table HTML:", tableHTML); // Debugging line
          document.getElementById("table-container").innerHTML = tableHTML;
          document.getElementById("upload-to-db").disabled = false;

          // Add the "show" class to the table container to smoothly reveal the updated table
          document.getElementById("table-container").classList.add("show");
        });

      document
        .getElementById("upload-to-db")
        .addEventListener("click", async () => {
          console.log("db upload click");
          // Show spinner and hide text
          const spinner = document.querySelector(
            "#upload-to-db .spinner-border"
          );
          const uploadText = document.getElementById("upload-text");
          spinner.classList.remove("d-none");
          uploadText.classList.add("d-none");

          const footDataElements = Array.from(
            document.querySelectorAll(".foot-data")
          );
          const footDataArray = footDataElements.map((footDataElement) =>
            JSON.parse(footDataElement.textContent)
          );

          console.log("Sending foot data:", footDataArray);
          const response = await fetch("/insert", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(footDataArray),
          });

          // Hide spinner and show text
          spinner.classList.add("d-none");
          uploadText.classList.remove("d-none");

          if (response.ok) {
            alert("Data inserted successfully");
          } else {
            alert("Error inserting data");
          }
          // Clear file input
          document.getElementById("inputGroupFile02").value = "";
          document.getElementById("table-container").innerHTML = "";
          document.getElementById("upload-to-db").disabled = true;
          document.getElementById("upload-to-db").classList.add("d-none");
        });
    </script>
  </body>
</html>
